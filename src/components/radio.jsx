import React from "react"
import { Carousel, WingBlank } from 'antd-mobile';
import { connect } from "dva"
import { routerRedux } from "dva/router"
import { Grid } from 'antd-mobile';
import request from '../utils/request';
import Lunbotu from "./lunbotu"
import { ActivityIndicator, WhiteSpace, Button } from 'antd-mobile';
import styles from "../components/radioPage.css"

class radio extends React.Component {
    state = {
        rediolist: [],
        animating: false,
    }
    componentWillMount() {
        fetch('/api/dj/catelist').then(body => body.json()).then(
            async res => {
                let redioarr = res.categories
                let arr = []
                for (let i in redioarr) {
                    arr.push(redioarr[i].id)
                }
                let rediodedailarr = []
                for (let i in arr) {
                    let obj = await request('/api/dj/recommend/type?type=' + arr[i])
                    rediodedailarr.push(obj.data.djRadios)
                }
                /*  console.log(rediodedailarr) */
                this.setState({
                    rediolist: rediodedailarr,
                    animating: true,
                })
            }
        )
    }
    handle = (id) => {
        console.log(id);
        localStorage.setItem("rid", id)
        this.props.dispatch(routerRedux.push({
            pathname: '/djcatelist/djs/details'
        }))
    }
    jump() {
        this.props.dispatch(routerRedux.push({
            pathname: '/djcatelist'
        }))
    }
    goBoutique=()=>{
        console.log("精品");
        this.props.dispatch(routerRedux.push({
            pathname: '/BoutiquePage'
        }))
        
    }
    goRanking=()=>{
        this.props.dispatch(routerRedux.push({
            pathname: '/RankingPage'
        }))
    }
    render() {
        let array = this.state.rediolist[0]
        let arrayList = this.state.rediolist;
        var arr2 = [].concat.apply([], arrayList);
        const GridExample = () => (
            <div>
                <Grid data={arr2}
                    columnNum={3}
                    renderItem={dataItem => (
                        <div style={{ padding: '0 12.5px', position: "relative" }} onClick={() => { this.handle(dataItem.id) }}>
                            <img src={dataItem.picUrl} style={{ width: '75px', height: '75px', borderRadius: "50%" }} alt="" />
                            <p style={{ fontSize: "10px", color: "#ccc" }}>{dataItem.name}</p>
                        </div>
                    )}
                />
            </div>
        );
        return (
            <div>
                <Lunbotu></Lunbotu>

                <div>
                    <ul className={styles.icon}>
                        <li onClick={() => this.jump()}>
                            <svg t="1574155847110" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="7879" width="32" height="32"><path d="M320 512 192 512c-70.4 0-128 57.6-128 128l0 128c0 70.4 57.6 128 128 128l128 0c70.4 0 128-57.6 128-128l0-128C448 569.6 390.4 512 320 512zM384 768c0 35.2-28.8 64-64 64L192 832c-35.2 0-64-28.8-64-64l0-128c0-35.2 28.8-64 64-64l128 0c35.2 0 64 28.8 64 64L384 768zM768 64l-128 0C569.6 64 512 121.6 512 192l0 128c0 70.4 57.6 128 128 128l128 0c70.4 0 128-57.6 128-128L896 192C896 121.6 838.4 64 768 64zM832 320c0 35.2-28.8 64-64 64l-128 0C604.8 384 576 355.2 576 320L576 192c0-35.2 28.8-64 64-64l128 0c35.2 0 64 28.8 64 64L832 320zM768 512l-128 0c-70.4 0-128 57.6-128 128l0 128c0 70.4 57.6 128 128 128l128 0c70.4 0 128-57.6 128-128l0-128C896 569.6 838.4 512 768 512zM832 768c0 35.2-28.8 64-64 64l-128 0c-35.2 0-64-28.8-64-64l0-128c0-35.2 28.8-64 64-64l128 0c35.2 0 64 28.8 64 64L832 768zM320 64 192 64C121.6 64 64 121.6 64 192l0 128c0 70.4 57.6 128 128 128l128 0c70.4 0 128-57.6 128-128L448 192C448 121.6 390.4 64 320 64zM384 320c0 35.2-28.8 64-64 64L192 384C156.8 384 128 355.2 128 320L128 192c0-35.2 28.8-64 64-64l128 0c35.2 0 64 28.8 64 64L384 320z" p-id="7880" fill="#df5240"></path></svg>
                            <p>分类</p>
                        </li>
                        <li onClick={this.goRanking}>
                            <svg t="1574155786655" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="6417" width="32" height="32"><path d="M682.479065 511.948836 682.479065 97.416608 339.37204 97.416608l0 209.466174L63.904067 306.882782l0 616.733087 275.467972 0 67.639053 0 207.112621 0 68.355351 0 274.751674 0L957.230738 511.948836 682.479065 511.948836 682.479065 511.948836zM338.860398 855.465174 132.054762 855.465174 132.054762 375.033477l206.805636 0L338.860398 855.465174 338.860398 855.465174zM407.522734 855.465174 407.522734 165.567303l206.805636 0 0 346.381533-0.204657 0L614.123713 855.465174 407.522734 855.465174 407.522734 855.465174 407.522734 855.465174zM889.080044 855.465174 682.479065 855.465174l0-275.263316 206.600979 0L889.080044 855.465174 889.080044 855.465174z" p-id="6418" fill="#df5240"></path></svg>
                            <p>排行</p>
                        </li>
                        <li onClick={this.goBoutique}>
                            <svg t="1574155867216" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="8294" width="32" height="32"><path d="M937.45 315.483c-14.289-14.435-33.41-22.386-53.844-22.386-41.598 0-75.436 33.456-75.436 74.572 0 11.53 2.723 22.845 7.936 33.146-44.19 26.749-88.361 53.399-132.298 79.907A150897.759 150897.759 0 0 1 588.05 308.37l-29.024-52.203c17.942-14.082 28.46-35.38 28.46-58.269 0-41.114-33.844-74.574-75.445-74.574-41.598 0-75.44 33.459-75.44 74.574 0 23.406 11.382 45.6 30.126 59.54-4.205 7.564-8.392 15.127-12.58 22.687l-15.717 28.321c-31.388 56.563-63.772 114.89-95.806 172.24a2344.055 2344.055 0 0 1-25.726-15.523l-11.5-6.924a30393.614 30393.614 0 0 0-57.282-34.601c-13.91-8.402-27.84-16.8-41.789-25.237 5.792-10.674 8.822-22.634 8.822-35.028 0-41.118-33.84-74.578-75.44-74.578-41.597 0-75.441 33.46-75.441 74.578 0 35.768 25.866 66.39 60.942 73.176l88.286 298.761c0.826 2.792 1.572 5.496 2.294 8.109 4.5 16.304 9.15 33.166 27.04 33.31 56.958 0.214 116.745 0.289 177.44 0.289 61.708 0 124.361-0.075 185.971-0.15 59.573-0.074 118.174-0.14 173.995-0.14 22.293 0 26.23-16.575 29.705-31.201 0.77-3.251 1.584-6.693 2.624-10.224l87.005-294.801c34.107-7.397 59.26-37.876 59.26-72.788 0.113-19.627-7.477-38.178-21.38-52.23zM512.042 168.404c16.549 0 30.018 13.233 30.018 29.493 0 16.263-13.47 29.496-30.018 29.496-16.549 0-30.015-13.232-30.015-29.496 0-16.26 13.466-29.493 30.015-29.493zM161.408 383.926c-5.708 5.765-13.376 8.939-21.59 8.939-16.545 0-30.011-13.233-30.011-29.493 0-16.262 13.466-29.496 30.011-29.496 16.552 0 30.018 13.233 30.018 29.532 0.042 7.705-2.952 14.982-8.428 20.518z m656.935 172.21l-24.3 82.421-20.91 79.206c-0.796 2.76-0.82 7.462-0.436 19.057h-518.12c2.923-7.103 3.716-10.823 2.726-14.145l-71.976-243.933c-3.096-10.63-6.299-21.313-9.463-31.867l-4.667-15.59c0.4-0.175 0.796-0.357 1.19-0.542l109.576 66.203a900.287 900.287 0 0 1 11.378 6.919c10.894 6.633 22.224 13.486 33.447 20.122 9.558 5.64 18.574 7.495 28.944 4.885 6.412-1.682 15.449-6.194 22.063-18.117 33.695-60.528 68.046-122.26 101.175-182a16402.851 16402.851 0 0 0 22.875-41.195l8.255-14.885c1.924 0.057 3.87 0.018 5.938-0.101l32.15 57.825a144632.724 144632.724 0 0 1 97.894 176.184c5.153 9.191 12.123 19.036 24.78 22.395a30.708 30.708 0 0 0 7.98 1.023c9.613 0 18.173-4.41 24.557-8.255a75672.147 75672.147 0 0 0 74.517-45.037c23.582-14.265 47.157-28.53 70.754-42.773a79.882 79.882 0 0 0 4.983 2.35 141929.053 141929.053 0 0 1-35.31 119.85z m65.263-158.971c-16.545 0-30.011-13.233-30.011-29.496 0-16.26 13.466-29.49 30.011-29.49 16.552 0 30.018 13.23 30.018 29.49 0 16.262-13.466 29.496-30.018 29.496zM568.134 850.777H285.221c-13.12 0-23.79 10.742-23.79 23.945 0 13.209 10.67 23.958 23.79 23.958h282.913c13.114 0 23.776-10.749 23.776-23.958 0-13.203-10.662-23.945-23.776-23.945z m169.76 0h-56.588c-6.359 0-12.335 2.499-16.812 7.018-4.503 4.51-6.97 10.53-6.97 16.927 0 13.066 10.433 23.71 23.352 23.942h57.017c13.11 0 23.772-10.733 23.772-23.942 0.001-13.203-10.66-23.945-23.771-23.945z" p-id="8295" fill="#df5240"></path></svg>
                            <p>精品</p>
                        </li>
                    </ul>



                </div>
                {this.state.animating ? <GridExample></GridExample> : <WingBlank>
                    <div className="loading-container" style={{ margin: "45%" }}>
                        <div className="loading-example">
                            <div className="align">
                                <ActivityIndicator size="large" />
                                <span style={{ marginTop: 8 }}>Loading...</span>
                            </div>
                        </div>
                    </div>
                </WingBlank>}
            </div>
        );
    }
}
const mapStateToProps = state => {
    return {
        msg: "揍你",

    }
}
export default connect(mapStateToProps)(radio)
